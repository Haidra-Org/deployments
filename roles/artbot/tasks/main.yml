- name: Create artbot user
  user:
    name: artbot
    shell: /bin/bash
  tags: artbot_app

- name: Download nvm installer
  get_url: 
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
    dest: /tmp/install.sh
    mode: 0755
  become_user: artbot
  tags: artbot_app
    
- name: Execute the nvm installer
  shell: /tmp/install.sh
  become_user: artbot
  tags: artbot_app

- name: Install nvm
  shell: source /home/artbot/.nvm/nvm.sh && nvm install v18.19.0
  args:
     executable: /bin/bash
  become_user: artbot
  register: nvm_out
  changed_when: "not 'is already installed' in nvm_out.stderr"
  tags: artbot_app

- name: Install pm2
  shell: source /home/artbot/.nvm/nvm.sh && npm install -g pm2
  args:
     executable: /bin/bash
  register: nvm_out
  become_user: artbot
  tags: artbot_app

- name: Setup pm2 service
  shell: env PATH=$PATH:/home/artbot/.nvm/versions/node/v18.19.0/bin /home/artbot/.nvm/versions/node/v18.19.0/lib/node_modules/pm2/bin/pm2 startup systemd -u artbot --hp /home/artbot
  args:
     executable: /bin/bash
  tags: artbot_app

- name: Install pm2-logrotate
  shell: source /home/artbot/.nvm/nvm.sh && pm2 install pm2-logrotate
  args:
     executable: /bin/bash
  become_user: artbot
  tags: artbot_app

- name: Clone Artbot github repository
  git:
    repo: https://github.com/Haidra-Org/artbot
    dest: /home/artbot/artbot
    clone: yes
    update: yes
    force: yes
  become_user: artbot
  register: git
  tags:
  - artbot_app
  - update

- name: Install artbot npm
  shell: source /home/artbot/.nvm/nvm.sh && npm install
  args:
     executable: /bin/bash
     chdir: /home/artbot/artbot
  become_user: artbot
  tags: 
  - artbot_app

- name: Build artbot
  shell: source /home/artbot/.nvm/nvm.sh && npm run build
  args:
     executable: /bin/bash
     chdir: /home/artbot/artbot
  environment:
    NO_BETA: "true"
  become_user: artbot
  when: git.changed is true
  tags: 
  - artbot_app
  - update

- name: Ensure artbot deploy location exists
  file:
    path: /home/artbot/builds
    owner: artbot
    group: artbot
    state: directory
  tags: 
  - artbot_app
  - update

- name: Ensure new build is hashstamped 
  copy:
    src: /home/artbot/artbot/.next/standalone/
    remote_src: true
    dest: /home/artbot/builds/{{ git.after }}
    owner: artbot
    group: artbot
  when: git.changed is true
  tags: 
  - artbot_app
  - update

- name: Ensure 'latest' symlink points to the latest build
  file:
    path: /home/artbot/builds/latest
    src: /home/artbot/builds/{{ git.after }}
    force: true
    state: link
  when: git.changed is true
  tags: 
  - artbot_app
  - update

- name: Ensure old artbot process is stopped
  shell: source /home/artbot/.nvm/nvm.sh && pm2 stop artbot && pm2 delete artbot
  args:
     executable: /bin/bash
     chdir: /home/artbot/builds/latest
  become_user: artbot
  when: git.changed is true
  register: artbot_stop
  failed_when: 
  - artbot_stop.rc != 0
  - "not 'Process or Namespace artbot not found' in artbot_stop.stderr"
  tags: 
  - artbot_app
  - update

- name: Ensure artbot is started
  shell: source /home/artbot/.nvm/nvm.sh && pm2 start ecosystem.config.js && pm2 save
  args:
     executable: /bin/bash
     chdir: /home/artbot/builds/latest
  become_user: artbot
  when: git.changed is true
  tags: 
  - artbot_app
  - update
